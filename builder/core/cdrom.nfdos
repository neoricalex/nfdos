#!/bin/bash

# TODO: https://lists.gnu.org/archive/html/qemu-discuss/2016-12/msg00042.html

inicio_cor="\033[0;32m"
fim_cor="\033[0m"

echo -e "$inicio_cor Criando as pastas do Live CD $fim_cor"
sudo mkdir -p image
sudo mkdir -p image/casper
sudo mkdir -p image/isolinux
sudo mkdir -p image/install

echo -e "$inicio_cor Copiar o vmlinuz, initrd do rootfs $fim_cor"
sudo cp rootfs/boot/vmlinuz-**-**-generic image/casper/vmlinuz
sudo cp rootfs/boot/initrd.img-**-**-generic image/casper/initrd

#echo -e "$inicio_cor Baixar, deszipar, copiar para o Live CD e deletar o zip do memtest $fim_cor"
#sudo cp chroot/boot/memtest86+.bin image/install/memtest86+
#wget --progress=dot https://www.memtest86.com/downloads/memtest86-usb.zip -O image/install/memtest86-usb.zip
#unzip -p image/install/memtest86-usb.zip memtest86-usb.img > image/install/memtest86
#rm image/install/memtest86-usb.zip

echo -e "$inicio_cor Preparar o Live CD do NFDOS de forma a que os Live CD's Ubuntu reconheçam o NFDOS $fim_cor"
sudo touch image/ubuntu

echo -e "$inicio_cor Configurar o grub.cfg $fim_cor"
cat <<EOF > image/isolinux/grub.cfg

search --no-floppy --set=root --file /ubuntu

insmod all_video

set default=0
set timeout=10

menuentry "Instalar o NFDOS" {
   linux /casper/vmlinuz boot=casper auto=true priority=critical locale=pt_PT console-setup/layoutcode=pt console-setup/ask_detect=false interface=auto file=/preseed.cfg only-ubiquity ubiquity/reboot=true  languagechooser/language-name="Português" countrychooser/shortlist=pt loglevel=7 debug=all clock-setup/utc=true noprompt --- # splash
   initrd /casper/initrd
}

menuentry "Iniciar o NFDOS Live" {
   linux /casper/vmlinuz boot=casper loglevel=7 locale=pt_BR LANG=pt_BR.UTF-8 LANGUAGE=pt_BR:pt --- # quiet splash
   initrd /casper/initrd
}

menuentry "Arrancar pelo Disco" {
  localboot 0x80
}

menuentry "Arrancar pelo Firmware (Não funciona)" {
  fwsetup
}

#menuentry "Check disc for defects" {
#   linux /casper/vmlinuz boot=casper integrity-check quiet splash ---
#   initrd /casper/initrd
#}

#menuentry "Test memory Memtest86+ (BIOS)" {
#   linux16 /install/memtest86+
#}

#menuentry "Test memory Memtest86 (UEFI, long load time)" {
#   insmod part_gpt
#   insmod search_fs_uuid
#   insmod chain
#   loopback loop /install/memtest86
#   chainloader (loop,gpt1)/efi/boot/BOOTX64.efi
#}
EOF

echo -e "$inicio_cor Criar o Manifesto $fim_cor"
sudo chroot rootfs dpkg-query -W --showformat='${Package} ${Version}\n' | sudo tee image/casper/filesystem.manifest

sudo cp -v image/casper/filesystem.manifest image/casper/filesystem.manifest-desktop

sudo sed -i '/ubiquity/d' image/casper/filesystem.manifest-desktop
sudo sed -i '/casper/d' image/casper/filesystem.manifest-desktop
sudo sed -i '/discover/d' image/casper/filesystem.manifest-desktop
sudo sed -i '/laptop-detect/d' image/casper/filesystem.manifest-desktop
sudo sed -i '/os-prober/d' image/casper/filesystem.manifest-desktop

echo -e "$inicio_cor Comprimir o chroot $fim_cor"
sudo mksquashfs rootfs image/casper/filesystem.squashfs

echo -e "$inicio_cor Calcular o tamanho $fim_cor"
sudo printf $(sudo du -sx --block-size=1 rootfs | cut -f1) > image/casper/filesystem.size

echo -e "$inicio_cor Criar o diskdefines para o Ubuntu reconhecer o NFDOS $fim_cor"
sudo cat <<EOF > image/README.diskdefines
#define DISKNAME NFDOS
#define TYPE  binary
#define TYPEbinary  1
#define ARCH  amd64
#define ARCHamd64  1
#define DISKNUM  1
#define DISKNUM1  1
#define TOTALNUM  0
#define TOTALNUM0  1
EOF

cd image

echo -e "$inicio_cor Configurar a GRUB UEFI $fim_cor"
sudo grub-mkstandalone \
   --format=x86_64-efi \
   --output=isolinux/bootx64.efi \
   --locales="" \
   --fonts="" \
   "boot/grub/grub.cfg=isolinux/grub.cfg"

(
   cd isolinux && \
   sudo dd if=/dev/zero of=efiboot.img bs=1M count=10 && \
   sudo mkfs.vfat efiboot.img && \
   LC_CTYPE=C mmd -i efiboot.img efi efi/boot && \
   LC_CTYPE=C mcopy -i efiboot.img ./bootx64.efi ::efi/boot/
)

echo -e "$inicio_cor Configurar a GRUB BIOS $fim_cor"
sudo grub-mkstandalone \
   --format=i386-pc \
   --output=isolinux/core.img \
   --install-modules="linux16 linux normal iso9660 biosdisk memdisk search tar ls all_video" \
   --modules="linux16 linux normal iso9660 biosdisk search all_video" \
   --locales="" \
   --fonts="" \
   "boot/grub/grub.cfg=isolinux/grub.cfg"

sudo cat /usr/lib/grub/i386-pc/cdboot.img isolinux/core.img > isolinux/bios.img

echo -e "$inicio_cor Criar o md5sum $fim_cor"
sudo /bin/bash -c "(find . -type f -print0 | xargs -0 md5sum | grep -v "\./md5sum.txt" > md5sum.txt)"

echo -e "$inicio_cor E finalmente, criar a imagem ISO do NFDOS $fim_cor"
sudo xorriso \
   -as mkisofs \
   -iso-level 3 \
   -full-iso9660-filenames \
   -volid "NFDOS" \
   -eltorito-boot boot/grub/bios.img \
   -no-emul-boot \
   -boot-load-size 4 \
   -boot-info-table \
   --eltorito-catalog boot/grub/boot.cat \
   --grub2-boot-info \
   --grub2-mbr /usr/lib/grub/i386-pc/boot_hybrid.img \
   -eltorito-alt-boot \
   -e EFI/efiboot.img \
   -no-emul-boot \
   -append_partition 2 0xef isolinux/efiboot.img \
   -output "../nfdos.iso" \
   -graft-points \
      "." \
      /boot/grub/bios.img=isolinux/bios.img \
      /EFI/efiboot.img=isolinux/efiboot.img

# Criar uma USB Bootável
# sudo dd if=nfdos.iso of=</dev/sdc?> status=progress oflag=sync